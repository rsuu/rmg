name: linux-release

on:
  push:
    tags:
    - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    name: (${{ matrix.target }}, ${{ matrix.cfg_release_channel }})
    env:
      CFG_RELEASE_CHANNEL: ${{ matrix.cfg_release_channel }}
    strategy:
      #max-parallel: 1
      fail-fast: false
      matrix:
        target: [
          x86_64-unknown-linux-gnu,
        ]
        #cfg_release_channel: [nightly, stable]
        cfg_release_channel: [nightly]

    steps:
    - name: checkout
      uses: actions/checkout@v3

      # Run build
    - name: install rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
        sh rustup-init.sh -y --default-toolchain none
        rustup target add ${{ matrix.target }}

    - name: Build and Test
      run: bash ./ci/build_linux_release.sh

    - name: Build archive
      shell: bash
      run: |
        cargo build --release

    - name: Target name
      shell: bash
      run: |
        _name="${{ matrix.target }}_${{ matrix.cfg_release_channel }}"
        echo $_name
        mkdir release
        cp target/release/rmg LICENSE-MIT LICENSE-APACHE2.0 release
        tar czf "$_name.tar.gz" release
        echo "ASSET=$_name.tar.gz" >> $GITHUB_ENV

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        tag_name: ${{ github.ref }}
        name: Release
        body: Release
        draft: false
        prerelease: false
        files: |
          ${{ ASSET }}
